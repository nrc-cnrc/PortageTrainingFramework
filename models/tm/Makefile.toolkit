# vim:noet:ts=3:nowrap

# @file Makefile.toolkit
# @brief Makefile targets and recipes to build Conditional Phrase Tables.
#
# @author Samuel Larkin
#
# Traitement multilingue de textes / Multilingual Text Processing
# Tech. de l'information et des communications / Information and Communications Tech.
# Conseil national de recherches Canada / National Research Council Canada
# Copyright 2010, 2012, 2015, Sa Majeste la Reine du Chef du Canada /
# Copyright 2010, 2012, 2015, Her Majesty in Right of Canada

TM_DIR_PFX := $(dir $(lastword ${MAKEFILE_LIST}))

# We assume the top level Makefile.params has already been included.
include ${TM_DIR_PFX}../Makefile.definition

# We don't need to sort if we are using -reduce-mem and sorted jpts which is
# the case in the framework.
JOINT2COND_PHRASE_TABLE_OPTION ?= -reduce-mem -no-sort -write-count

# Options for joint2multi_cpt
JOINT2MULTI_CPT_OPTIONS ?= -write-count

# Set all the flags needed to generate the a= field in phrase tables, if requested.
ifdef TMS_WITH_ALIGNMENT_FIELD
   JOINT2COND_PHRASE_TABLE_OPTION += -write-al top
   JOINT2MULTI_CPT_OPTIONS += -write-al top
endif

########################################
# CPT MODELS.
CPT_MODEL_PFX ?= cpt
CPT_CPUS ?= 4
#CPT_SMOOTHERS ?= -s RFSmoother  -s ZNSmoother
#SMOOTHERS_DESCRIPTION ?= -rf-zn
CPT_SMOOTHERS ?= -s "KNSmoother 3"  -s ZNSmoother
SMOOTHERS_DESCRIPTION ?= -kn3-zn

########################################
# CPT MODELS with alignment indicator features
CPT_INDICATOR_PFX ?= ${CPT_MODEL_PFX}.PI
CPT_PI_SMOOTHERS ?= -s '0:KNSmoother 3' -s ZNSmoother -a '1-100:PureIndicator'
PI_SMOOTHERS_DESCRIPTION ?= -kn3-zn

# MIXTURE TRANSLATION MODEL
MIX_CPUS ?= 1


########################################
# TPPT MODELS.
TPPT_CPUS ?= ${CPT_CPUS}

########################################
# Switch cpts dependencies from jpt to sig.
ifdef USE_SIGPRUNING
CPT_DEP_TAG := SIG
else
CPT_DEP_TAG := JPT
endif

########################################
# NOTES:
# - We should have some rules to clean each type of models!?
# - SRC_LANG & TGT_LANG are side effects of WMT-ACL10 and we might want to rename
#   them to L1 & L2.
# - We also need to remove the hardcoded SHELL variable in this script to use
#   the FRAMEWORK_SHELL of the portage.simple.framework.


########################################
# MIXTURE CPT: Linear combination of CPTS
CPT_MIX_PFX ?= ${CPT_MODEL_PFX}.mix

${CPT_MIX_PFX}%${L1_2_L2X}: SHELL=${FRAMEWORK_SHELL}
${CPT_MIX_PFX}%${L1_2_L2X}:
	RP_PSUB_OPTS="-${MIX_CPUS} -N $@ ${PSUB_OPTS}" \
	${TIME_MEM} \
	train_tm_mixture \
		-v \
		-o $@ \
		$(filter %${L1_2_L2X}, $+) \
		$(filter %.${JOINTX}, $+) \
		&> log.${@:.gz=}

${CPT_MIX_PFX}%${L2_2_L1X}: SHELL=${FRAMEWORK_SHELL}
${CPT_MIX_PFX}%${L2_2_L1X}:
	RP_PSUB_OPTS="-${MIX_CPUS} -N $@ ${PSUB_OPTS}" \
	${TIME_MEM} \
	train_tm_mixture \
		-r -v \
		-o $@ \
		$(filter %${L2_2_L1X}, $+) \
		$(filter %.${JOINTX}, $+) \
		&> log.${@:.gz=}


########################################
# ALIGNMENT INDICATOR FEATURES

${CPT_INDICATOR_PFX}%${L1_2_L2X}:  SHELL=${FRAMEWORK_SHELL}
${CPT_INDICATOR_PFX}%${L1_2_L2X}:
	RP_PSUB_OPTS="-${CPT_CPUS} -N $@ ${PSUB_OPTS}" \
	${TIME_MEM} \
	joint2multi_cpt \
		${JOINT2MULTI_CPT_OPTIONS} \
		${CPT_PRUNE1} \
		-v -i -z \
		-1 ${SRC_LANG} -2 ${TGT_LANG} \
		${CPT_PI_SMOOTHERS} \
		-dir fwd \
		-o $(subst .${L1_2_L2X},,$@) \
		-ibm_l2_given_l1  $(filter %${L2_GIVEN_L1X}, $+) \
		-ibm_l1_given_l2  $(filter %${L1_GIVEN_L2X}, $+) \
		$| \
		&> log.${@:.gz=}

${CPT_INDICATOR_PFX}%${L2_2_L1X}:  SHELL=${FRAMEWORK_SHELL}
${CPT_INDICATOR_PFX}%${L2_2_L1X}:
	RP_PSUB_OPTS="-${CPT_CPUS} -N $@ ${PSUB_OPTS}" \
	${TIME_MEM} \
	joint2multi_cpt \
		${JOINT2MULTI_CPT_OPTIONS} \
		${CPT_PRUNE1} \
		-v -i -z \
		-1 ${SRC_LANG} -2 ${TGT_LANG} \
		${CPT_PI_SMOOTHERS} \
		-dir fwd \
		-o $(subst .${L1_2_L2X},,$@) \
		-ibm_l2_given_l1  $(filter %${L1_GIVEN_L2X}, $+) \
		-ibm_l1_given_l2  $(filter %${L2_GIVEN_L1X}, $+) \
		$| \
		&> log.${@:.gz=}


########################################
# CPT MODELS
${CPT_MODEL_PFX}.%: CPT_PRUNE1=-prune1w 100

# Non mixture/indicator CPT models:

${CPT_MODEL_PFX}%${L1_2_L2X}: SHELL=${FRAMEWORK_SHELL}
${CPT_MODEL_PFX}%${L1_2_L2X}:
	RP_PSUB_OPTS="-${CPT_CPUS} -N $@ ${PSUB_OPTS}" \
	${TIME_MEM} \
	joint2cond_phrase_tables \
		${CPT_PRUNE1} \
		-v -i -z \
		-1 ${SRC_LANG} -2 ${TGT_LANG} \
		${CPT_SMOOTHERS} \
		-multipr fwd \
		-o $(subst .${L1_2_L2X},,$@) \
		-ibm_l2_given_l1  $(filter %${L2_GIVEN_L1X}, $+) \
		-ibm_l1_given_l2  $(filter %${L1_GIVEN_L2X}, $+) \
		${JOINT2COND_PHRASE_TABLE_OPTION} \
		$(filter %${JOINTX}, $+) \
		&> log.${@:.gz=}

# Special case to make valid prune1w reversed conditional phrase tables.
# Requires:
# - forward & backward phrase alignment models;
# - reversed joint frequency files.
${CPT_MODEL_PFX}%${L2_2_L1X}: SHELL=${FRAMEWORK_SHELL}
${CPT_MODEL_PFX}%${L2_2_L1X}:
	RP_PSUB_OPTS="-${CPT_CPUS} -N $@ ${PSUB_OPTS}" \
	${TIME_MEM} \
	joint2cond_phrase_tables \
		${CPT_PRUNE1} \
		-v -i -z \
		-1 ${TGT_LANG} -2 ${SRC_LANG} \
		${CPT_SMOOTHERS} \
		-multipr fwd \
		-o $(subst .${L2_2_L1X},,$@) \
		-ibm_l2_given_l1  $(filter %${L1_GIVEN_L2X}, $+) \
		-ibm_l1_given_l2  $(filter %${L2_GIVEN_L1X}, $+) \
		${JOINT2COND_PHRASE_TABLE_OPTION} \
		$(filter %.${RJOINTX}, $+) \
		&> log.${@:.gz=}


################################################################################
# Create tightly packed conditional phrase table.
%.tppt: SHELL=${FRAMEWORK_SHELL}
%.tppt: %.gz
	RP_PSUB_OPTS="-${TPPT_CPUS} -N $@" \
	${TIME_MEM} \
	textpt2tppt.sh -v $< \
	2> log.$@


########################################
# Transform models for PortageLive
# Note: portageLive dependencies are defined in Makefile (or Makefile.zn-adapt)
PORTAGE_LIVE_DEST_DIR ?= ../portageLive/models/tm
.PHONY: portageLive
portageLive: SHELL=${LOCAL_SHELL}
portageLive:
	mkdir -p ${PORTAGE_LIVE_DEST_DIR}
	${RM} -r ${PORTAGE_LIVE_DEST_DIR}/*
	cd ${PORTAGE_LIVE_DEST_DIR} && ln -fs $(addprefix ../../../tm/, $+) .


################################################################################
# HELPERS

################################################################################
# UNITTESTS.
