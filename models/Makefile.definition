# vim:noet:ts=3:nowrap
# @file Makefile.definition
# @brief Holds some common variables for ibm, wal, jpt, sig & tm.
#
# @author Samuel Larkin
#
# Technologies langagieres interactives / Interactive Language Technologies
# Inst. de technologie de l'information / Institute for Information Technology
# Conseil national de recherches Canada / National Research Council Canada
# Copyright 2015, Sa Majeste la Reine du Chef du Canada /
# Copyright 2015, Her Majesty in Right of Canada


UTF8 = $(if $(findstring Darwin, ${OSTYPE}),UTF-8,utf8)
export LANG   = en_CA.${UTF8}
export LC_ALL = en_CA.${UTF8}


# sort is used to remove duplicate or else dependencies are duplicated.
ALL_TMS ?= $(strip ${TRAIN_TM} ${MIXTM})
ALL_TMS := $(sort ${ALL_TMS})

# sort is used to remove duplicate or else dependencies are duplicated.
ALL_WAMS ?= $(strip ${ALL_TMS} ${TRAIN_LDM} ${TRAIN_HLDM} ${MIXTM_TRAIN_MIX} ${TRAIN_BILM})
ALL_WAMS := $(sort ${ALL_WAMS})

# sort is used to remove duplicate or else dependencies are duplicated.
MIX_WAMS ?= $(strip ${MIXTM} ${MIXTM_TRAIN_MIX})
MIX_WAMS := $(sort ${MIX_WAMS})

# Default languages
SRC_LANG ?= en
TGT_LANG ?= fr

# Default language corpora extension.
LANGX  ?= .lc
LANGXZ ?= ${LANGX}.gz

# Language file extension.
L1  ?= _${SRC_LANG}${LANGX}
L2  ?= _${TGT_LANG}${LANGX}
L1X ?= _${SRC_LANG}${LANGXZ}
L2X ?= _${TGT_LANG}${LANGXZ}

# IBM / HMM models extension.
L1_GIVEN_L2  ?= ${SRC_LANG}_given_${TGT_LANG}
L2_GIVEN_L1  ?= ${TGT_LANG}_given_${SRC_LANG}
L1_GIVEN_L2X ?= ${L1_GIVEN_L2}.gz
L2_GIVEN_L1X ?= ${L2_GIVEN_L1}.gz

# conditional phrase table extension.
L1_2_L2  ?= ${SRC_LANG}2${TGT_LANG}
L2_2_L1  ?= ${TGT_LANG}2${SRC_LANG}
L1_2_L2X ?= ${L1_2_L2}.gz
L2_2_L1X ?= ${L2_2_L1}.gz

# Joint phrase table extension.
JOINT   ?= ${SRC_LANG}-${TGT_LANG}
JOINTX  ?= ${JOINT}.gz
RJOINT  ?= ${TGT_LANG}-${SRC_LANG}
RJOINTX ?= ${RJOINT}.gz

########################################
# IBM1 MODELS.
IBM1_MODEL_PFX ?= ibm1
IBM1_MODEL_CPUS ?= 1
IBM1_MODEL_PARALLELISM_LEVEL ?= ${PARALLELISM_LEVEL_TM}
IBM1_MODEL_WORKERS ?= ${IBM1_MODEL_PARALLELISM_LEVEL}
IBM1_MODEL_EXTRAS ?=

########################################
# IBM2 MODELS.
IBM2_MODEL_PFX ?= ibm2
IBM2_MODEL_CPUS ?= 1
IBM2_MODEL_PARALLELISM_LEVEL ?= ${PARALLELISM_LEVEL_TM}
IBM2_MODEL_WORKERS ?= ${IBM2_MODEL_PARALLELISM_LEVEL}
IBM2_MODEL_EXTRAS ?=

########################################
# HMM1 MODELS.
HMM1_MODEL_PFX ?= hmm1
HMM1_MODEL_CPUS ?= 1
HMM1_MODEL_PARALLELISM_LEVEL ?= ${PARALLELISM_LEVEL_TM}
HMM1_MODEL_WORKERS ?= ${HMM1_MODEL_PARALLELISM_LEVEL}
HMM1_MODEL_EXTRAS ?=

########################################
# HMM2 MODELS.
HMM2_MODEL_PFX ?= hmm2
HMM2_MODEL_CPUS ?= 1
HMM2_MODEL_PARALLELISM_LEVEL ?= ${PARALLELISM_LEVEL_TM}
HMM2_MODEL_WORKERS ?= ${HMM2_MODEL_PARALLELISM_LEVEL}
HMM2_MODEL_EXTRAS ?=

########################################
# HMM3 MODELS.
HMM3_MODEL_PFX ?= hmm3
HMM3_MODEL_CPUS ?= 1
HMM3_MODEL_PARALLELISM_LEVEL ?= ${PARALLELISM_LEVEL_TM}
HMM3_MODEL_WORKERS ?= ${HMM3_MODEL_PARALLELISM_LEVEL}
HMM3_MODEL_EXTRAS ?=
# Autodetect whether -newhmm is supported (i.e., it's not in PortageII).
NEW_HMM := $(addprefix(-, $(strip $(shell train_ibm -h 2>&1 | grep -om1 newhmm)))

########################################
# IBM4 MODELS
IBM4_MODEL_PFX ?= ibm4
IBM4_MODEL_CPUS ?= 4
IBM4_MODEL_PARALLELISM_LEVEL ?= ${IBM4_MODEL_CPUS}

########################################
# List of all possible word alignment models in the framework.
# These must be ordered from most reliable to least reliable, because of the
# fill-up procedure.
POSSIBLE_WORD_ALIGNMENT_MODELS := ${IBM4_MODEL_PFX} ${HMM3_MODEL_PFX} ${HMM2_MODEL_PFX} ${HMM1_MODEL_PFX} ${IBM2_MODEL_PFX} ${IBM1_MODEL_PFX}

########################################
# JPT MODELS.
JPT_MODEL_PFX ?= jpt

########################################
# SIG MODELS.
SIG_THRESHOLD ?= a+e
SIG_MODEL_PFX ?= sig.${SIG_THRESHOLD}


# DON'T change the following variable, we need a new variable to hold the
# corpora stem for train mixture tm.
TUNE_MIXTM_FINAL := $(or ${TUNE_MIXTM_MULTIPLE_REFERENCES}, ${TUNE_MIXTM})


JPT_MERGED_PFX := ${JPT_MODEL_PFX}.merged
SIG_MERGED_PFX := ${SIG_MODEL_PFX}.merged

# Track memory usage.
TIME_MEM ?= time-mem

########################################
# FUNCTIONS.
# Joins two parallel lists of words.
interleave  = $(strip $(subst , , $(join $1, $(addprefix , $2))))
interleave3 = $(strip $(subst , , $(join $1, $(addprefix , $(join $2, $(addprefix , $3))))))
interleave4 = $(strip $(subst , , $(join $1, $(addprefix , $(join $2, $(addprefix , $(join $3, $(addprefix , $4))))))))
# Make sure we interleave only the corpora and that we exclude the models.
# filter_interleave list1_extension list2_extension filt-out-model all-files
filter_interleave = $(call interleave, $(filter $1, $(filter-out $3, $4)), $(filter $2, $(filter-out $3, $4)))



################################################################################
# ARGUMENTS VALIDATION.
ifndef SRC_LANG
$(error You must define SRC_LANG)
endif

ifndef TGT_LANG
$(error You must define TGT_LANG)
endif

ifndef PARALLELISM_LEVEL_TM
$(error You must define PARALLELISM_LEVEL_TM)
endif



