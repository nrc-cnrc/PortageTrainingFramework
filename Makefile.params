################################################################################
# User definable variables

# This is the from/source language
export SRC_LANG ?= en
# This is the to/target language
export TGT_LANG ?= fr

# Here we specify the stem of the corpora files.
# files should look like this: <STEM>_<LANGUAGE>.raw
# i.e. test1_fr.raw
export TRAIN_LM      ?= train
export TRAIN_TM      ?= train
export TUNE_DECODE   ?= dev1
export TUNE_RESCORE  ?= dev2
export TRANSLATE_SET ?= test1 test2

# The prefix_root where we can find IRSTLM/bin
export IRSTLM ?= /home/larkins/sandboxes/irstlm

# Uncomment the following line if you have acces to SRILM.
#LM_TOOLKIT_SRI=1

# Uncomment the following line if you want to do rescoring.
#DO_RESCORING=1

# If you are on a cluster that is run-parallel.sh friendly, define the following
#USING_CLUSTER=1



################################################################################
# System defined variables
# Don't change the following unless you have some specific needs.

# Compress extension.
GZ ?= .gz

# Raw file's extension.
export RAWX ?= .raw

# Extension for rule files which must also be source file.
export RULEX ?= _${SRC_LANG}.rule

# Language extension for phrase table corpora.
# Extension for corpora.
export LANGX  ?= .lc
# Extension for compressed corpora.
export LANGXZ ?= ${LANGX}${GZ}

# Language pair for this system.
export LANGS ?= ${SRC_LANG} ${TGT_LANG}

# Define the corpora.
export TRAIN_SET    ?= ${TRAIN_LM} ${TRAIN_TM}
export HELDOUT_SET  ?= ${TUNE_DECODE} ${TUNE_RESCORE} ${TRANSLATE_SET}
export CORPORA_SET  ?= ${TRAIN_SET} ${HELDOUT_SET}

# Define what type of phrase table we want to generate.
export PT_TYPE ?= ibm2_cpt

# Define what type of language model we want to generate.
export LM_TYPES ?= binlm

# Parameters for models/decode/Makefile
#export TEMPLATE_DIR    ?= ${ROOT_DIR}/models/decode
export PREFIX_DEV_COW  ?= ${TUNE_DECODE}
export PREFIX_DEV_RAT  ?= ${TUNE_RESCORE}

#
DECODING_MODEL ?= canoe.ini.cow

# Defines the truecasing model filename.
TRUECASING_MAP ?= ${TRAIN_LM}_${TGT_LANG}.map
TRUECASING_LM  ?= ${TRAIN_LM}_${TGT_LANG}-kn-3g.binlm${GZ}

# Define the following variable if you want to create forward and backward phrase tables
#export BIDIRECTIONAL_SYSTEM = 1




# If we are lucky enough to have a cluster, will change the shell for certain
# commands and allow them to run on nodes.
ifdef USING_CLUSTER
FRAMEWORK_SHELL = run-parallel.sh
else
FRAMEWORK_SHELL = /bin/sh
endif

# Some commands shouldn't be run with the cluster shell, will use this one
# instead.
GUARD_SHELL = /bin/sh

########################################
# HELPERS
# How to compress a file.
%.gz: %
	cat $< | gzip > $@

